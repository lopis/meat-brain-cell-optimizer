document.write('<!doctype html><meta charset=UTF-8><title>Meat Brain Cell Optimizer</title><meta content="width=device-width,initial-scale=1" name=viewport><link href="data:image/svg+xml,%3Csvg xmlns='http://www.w3.org/2000/svg' viewBox='0 0 100 100'%3E%3Ctext y='.9em' font-size='90'%3EðŸ”µ%3C/text%3E%3C/svg%3E" rel="shortcut icon" type=image/x-icon><style>:root{--color-0:#ecfffb;--color-1:#e4c200;--color-2:#c330b2;--color-3:#6e0067;--color-4:#3300c0;--color-5:#070044}#c2d{position:absolute;height:100vmin;width:100vmin;image-rendering:pixelated}body,html{user-select:none;margin:0;background-color:var(--color-5);display:flex;justify-content:center;align-items:center;height:100%;width:100%;color:var(--color-0);font-family:Arial,Helvetica,sans-serif;font-size:6vmin}h1{text-shadow:5px 5px var(--color-2),10px 10px var(--color-3),15px 15px var(--color-4);font-size:2em;animation:.8s linear infinite shadow}@keyframes shadow{from{text-shadow:0 0 var(--color-0),2px 2px var(--color-2),7px 7px var(--color-3),14px 14px 1px var(--color-4)}to{text-shadow:2px 2px var(--color-2),7px 7px var(--color-3),14px 14px 1px var(--color-4),21px 21px 5px var(--color-5)}}.hide{display:none!important}#intro,#menu,#result{height:100%;width:100%;position:absolute;display:flex;flex-direction:column;justify-content:center;align-items:center;text-align:center;padding:2vmax;box-sizing:border-box}ul{list-style:none;padding:0;text-align:center;display:flex;flex-direction:column;align-content:stretch}ul button{--button-color:var(--color-2);color:var(--color-5);background-color:var(--color-0);padding:.5em;margin:.5em 0;user-select:none;cursor:pointer;font-variant-caps:small-caps;font-weight:700;font-size:20px;box-shadow:5px 5px var(--button-color);border:3px solid var(--button-color);transition:transform .1s,box-shadow .1s;width:100%;display:inline-flex;justify-content:center;gap:1em}ul button :last-child{margin-left:auto}ul button:active{transform:translate(4px,4px);box-shadow:1px 1px var(--button-color)}ul button:hover{--button-color:var(--color-1)}#intro{max-width:40ch}#controls{position:fixed;bottom:0;width:90%;text-align:center;margin:2vh 0;display:flex;justify-content:center;transform:translateY(calc(100% + 2vh));transition:.5s ease-in-out .1s}#controls.slide{transform:translateY(0)}#fps{position:fixed;top:0;left:0;color:var(--color-1);padding:1vh;font-size:10px}input[type=range]{-webkit-appearance:none;max-width:100%;width:400px;background:0 0}input[type=range]:focus{outline:0}input[type=range]::-webkit-slider-runnable-track{width:100%;height:25px;cursor:pointer;box-shadow:0 0 0 #000,0 0 0 #0d0d0d;background:var(--color-2);border-radius:25px;border:5px solid var(--color-5)}input[type=range]::-webkit-slider-thumb{box-shadow:0 0 0 #000,0 0 0 #0d0d0d;border:0 solid #000;height:40px;width:40px;border-radius:40px;background:var(--color-5);cursor:pointer;-webkit-appearance:none;margin-top:-12.5px}input[type=range]:focus::-webkit-slider-runnable-track{background:var(--color-2)}input[type=range]::-moz-range-track{width:100%;height:15px;cursor:pointer;box-shadow:0 0 0 #000,0 0 0 #0d0d0d;background:var(--color-2);border-radius:25px;border:5px solid var(--color-5)}input[type=range]::-moz-range-thumb{box-shadow:0 0 0 #000,0 0 0 #0d0d0d;border:0 solid #000;height:40px;width:40px;border-radius:40px;background:var(--color-5);cursor:pointer}#submit{padding:1vh;margin-left:4vh;border-radius:999px;height:100px;width:100px;background:var(--color-1);border:3px solid var(--color-5);box-shadow:5px 5px var(--color-5);font-size:30px;font-weight:700;color:var(--color-5);transition:.1s ease-in-out 50ms;flex-shrink:0}#submit.clicked{transform:translate(4px,4px);box-shadow:1px 1px var(--color-5)}#lights{position:fixed;top:0;display:flex;transform:translateY(calc(-150% + 2vh));transition:.5s ease-in-out .1s;padding:3vh}#controls.slide+#lights{transform:translateY(0)}.led{--color-lights:var(--color-5);position:relative;height:15px;width:20px;background:var(--color-lights);margin:1vh}.led::after{content:"";height:6px;width:28px;position:absolute;background:var(--color-lights);bottom:-6px;left:-4px}.led::before{content:"";height:10px;width:20px;position:absolute;background:var(--color-lights);top:-10px;left:0;border-radius:99px 99px 0 0}.led.on{--color-lights:var(--color-0)}</style><canvas height=1080 id=c2d width=1920></canvas><div id=menu><h1><span>Meat Brain</span><br><span>Cell Optimizer</span></h1><ul><li><button id=start>Start</button><li><button id=contGame>Continue</button><li><button id=fullscreen>Fullscreen</button></ul></div><div class=hide id=intro><p>Although humans are mere meat brains, you are still surprisingly good at pattern recognition. You are too primitive to understand why, but itâ€™s instinctive to you. In this experiment weâ€™re testing if humanity is an efficient and reliable way to help optimize our multi-dimensional penta-quantized energy cells.<p>You must not worry about the details of the technology; your limited brain could not begin to comprehend. Focus on your instinct to find the most harmonious and optimized configurations of the parameters youâ€™re given.<ul><li><button id=play>Uh, OK...</button></ul></div><div class=hide id=result><h2 id=resultTitle></h2><p id=resultText><ul><li><button id=nextLevel><span>Continue</span><span>â† </span></button><li><button id=retry><span>Retry</span><span>â†º</span></button></ul></div><div id=controls><input id=range max=100 min=0 type=range value=25><button id=submit>OK</button></div><div id=lights><div class=led></div><div class=led></div><div class=led></div><div class=led></div><div class=led></div></div><div id=fps></div>');window.debug=1;
window.h={i:{},reset:a=>{W.canvas=a;W.ga=0;W.current={};W.next={};W.V={};W.g=a.getContext("webgl2");W.g.blendFunc(770,771);W.g.activeTexture(33984);W.l=W.g.createProgram();W.g.enable(2884);W.g.shaderSource(a=W.g.createShader(35633),"#version 300 es\n      precision highp float;                        // Set default float precision\n      in vec4 pos, col, uv, normal;                 // Vertex attributes: position, color, texture coordinates, normal (if any)\n      uniform mat4 pv, eye, m, im;                  // Uniform transformation matrices: projection * view, eye, model, inverse model\n      uniform vec4 bb;                              // If the current shape is a billboard: bb = [w, h, 1.0, 0.0]\n      out vec4 v_pos, v_col, v_uv, v_normal;        // Varyings sent to the fragment shader: position, color, texture coordinates, normal (if any)\n      void main() {                                 \n        gl_Position = pv * (                        // Set vertex position: p * v * v_pos\n          v_pos = bb.z > 0.                         // Set v_pos varying:\n          ? m[3] + eye * (pos * bb)                 // Billboards always face the camera:  p * v * distance + eye * (position * [w, h, 1.0, 0.0])\n          : m * pos                                 // Other objects rotate normally:      p * v * m * position\n        );                                          \n        v_col = col;                                // Set varyings \n        v_uv = uv;\n        v_normal = transpose(inverse(m)) * normal;  // recompute normals to match model thansformation\n      }");W.g.compileShader(a);
W.g.attachShader(W.l,a);debug&&console.log("vertex shader:",W.g.getShaderInfoLog(a)||"OK");W.g.shaderSource(a=W.g.createShader(35632),"#version 300 es\n      precision highp float;                  // Set default float precision\n      in vec4 v_pos, v_col, v_uv, v_normal;   // Varyings received from the vertex shader: position, color, texture coordinates, normal (if any)\n      uniform vec3 light;                     // Uniform: light direction, smooth normals enabled\n      uniform vec4 o;                         // options [smooth, shading enabled, ambient, mix]\n      uniform sampler2D sampler;              // Uniform: 2D texture\n      out vec4 c;                             // Output: final fragment color\n\n      // The code below displays colored / textured / shaded fragments\n      void main() {\n        c = mix(texture(sampler, v_uv.xy), v_col, o[3]);  // base color (mix of texture and rgba)\n        if(o[1] > 0.){                                    // if lighting/shading is enabled:\n          c = vec4(                                       // output = vec4(base color RGB * (directional shading + ambient light)), base color Alpha\n            c.rgb * (max(0., dot(light, -normalize(       // Directional shading: compute dot product of light direction and normal (0 if negative)\n              o[0] > 0.                                   // if smooth shading is enabled:\n              ? vec3(v_normal.xyz)                        // use smooth normals passed as varying\n              : cross(dFdx(v_pos.xyz), dFdy(v_pos.xyz))   // else, compute flat normal by making a cross-product with the current fragment and its x/y neighbours\n            )))\n            + o[2]),                                      // add ambient light passed as uniform\n            c.a                                           // use base color's alpha\n          );\n        }\n      }");
W.g.compileShader(a);W.g.attachShader(W.l,a);debug&&console.log("fragment shader:",W.g.getShaderInfoLog(a)||"OK");W.g.linkProgram(W.l);W.g.useProgram(W.l);debug&&console.log("program:",W.g.getProgramInfoLog(W.l)||"OK");W.g.clearColor(1,1,1,1);W.clearColor=b=>W.g.clearColor(...W.S(b));W.clearColor("fff");W.g.enable(2929);W.fa({y:-1});W.B({M:30});setTimeout(W.Z,16)},u:(a,b,c)=>{let d;(d=a).n||(d.n="o"+W.ga++);a.size&&(a.w=a.N=a.d=a.size);a.t&&a.t.width&&!W.V[a.t.id]&&(c=W.g.createTexture(),W.g.pixelStorei(37441,
!0),W.g.bindTexture(3553,c),W.g.pixelStorei(37440,1),W.g.texImage2D(3553,0,6408,6408,5121,a.t),W.g.generateMipmap(3553),W.V[a.t.id]=c);a.M&&(W.ha=new DOMMatrix([1/Math.tan(a.M*Math.PI/180)/(W.canvas.width/W.canvas.height),0,0,0,0,1/Math.tan(a.M*Math.PI/180),0,0,0,0,-1001/999,-1,0,0,-2002/999,0]));a={type:b,...(W.current[a.n]=W.next[a.n]||{w:1,N:1,d:1,x:0,y:0,z:0,rx:0,ry:0,la:0,b:"888",mode:4,P:0}),...a,f:0};W.i[a.type]?.C&&!W.i?.[a.type].ba&&(W.g.bindBuffer(34962,W.i[a.type].ba=W.g.createBuffer()),
W.g.bufferData(34962,new Float32Array(W.i[a.type].C),35044),!W.i[a.type].G&&W.smooth&&W.smooth(a),W.i[a.type].G&&(W.g.bindBuffer(34962,W.i[a.type].$=W.g.createBuffer()),W.g.bufferData(34962,new Float32Array(W.i[a.type].G.flat()),35044)));W.i[a.type]?.L&&!W.i[a.type].W&&(W.g.bindBuffer(34962,W.i[a.type].W=W.g.createBuffer()),W.g.bufferData(34962,new Float32Array(W.i[a.type].L),35044));W.i[a.type]?.indices&&!W.i[a.type].O&&(W.g.bindBuffer(34963,W.i[a.type].O=W.g.createBuffer()),W.g.bufferData(34963,
new Uint16Array(W.i[a.type].indices),35044));a.t?a.t&&!a.P&&(a.P=0):a.P=1;W.next[a.n]=a},Z:(a,b,c,d,g=[])=>{b=a-W.ea;W.ea=a;requestAnimationFrame(W.Z);W.next?.B?.v&&W.U(W.next[W.next.B.v],b,1);c=W.animation("camera");W.next?.B?.v&&c.preMultiplySelf(W.next[W.next.B.v].R||W.next[W.next.B.v].o);W.g.uniformMatrix4fv(W.g.getUniformLocation(W.l,"eye"),!1,c.toFloat32Array());c.invertSelf();c.preMultiplySelf(W.ha);W.g.uniformMatrix4fv(W.g.getUniformLocation(W.l,"pv"),!1,c.toFloat32Array());W.g.clear(16640);
for(d in W.next)W.next[d].t||1!=W.S(W.next[d].b)[3]?g.push(W.next[d]):W.U(W.next[d],b);g.sort((k,m)=>W.Y(m)-W.Y(k));W.g.enable(3042);for(d of g)["plane","billboard"].includes(d.type)&&W.g.depthMask(0),W.U(d,b),W.g.depthMask(1);W.g.disable(3042);W.g.uniform3f(W.g.getUniformLocation(W.l,"light"),W.s("light","x"),W.s("light","y"),W.s("light","z"))},U:(a,b,c=["camera","light","group"].includes(a.type),d)=>{a.t&&(W.g.bindTexture(3553,W.V[a.t.id]),W.g.uniform1i(W.g.getUniformLocation(W.l,"sampler"),0));
a.f<a.a&&(a.f+=b);a.f>a.a&&(a.f=a.a);W.next[a.n].o=W.animation(a.n);W.next[a.v]&&W.next[a.n].o.preMultiplySelf(W.next[a.v].R||W.next[a.v].o);W.g.uniformMatrix4fv(W.g.getUniformLocation(W.l,"m"),!1,(W.next[a.n].R||W.next[a.n].o).toFloat32Array());W.g.uniformMatrix4fv(W.g.getUniformLocation(W.l,"im"),!1,(new DOMMatrix(W.next[a.n].R||W.next[a.n].o)).invertSelf().toFloat32Array());c||(W.g.bindBuffer(34962,W.i[a.type].ba),W.g.vertexAttribPointer(d=W.g.getAttribLocation(W.l,"pos"),3,5126,!1,0,0),W.g.enableVertexAttribArray(d),
W.i[a.type].W&&(W.g.bindBuffer(34962,W.i[a.type].W),W.g.vertexAttribPointer(d=W.g.getAttribLocation(W.l,"uv"),2,5126,!1,0,0),W.g.enableVertexAttribArray(d)),(a.ia||W.i[a.type].da)&&W.i[a.type].$&&(W.g.bindBuffer(34962,W.i[a.type].$),W.g.vertexAttribPointer(d=W.g.getAttribLocation(W.l,"normal"),3,5126,!1,0,0),W.g.enableVertexAttribArray(d)),W.g.uniform4f(W.g.getUniformLocation(W.l,"o"),a.ia,(3<a.mode||3<W.g[a.mode])&&!a.aa?1:0,W.ca||.2,a.P),W.g.uniform4f(W.g.getUniformLocation(W.l,"bb"),a.w,a.N,"billboard"==
a.type,0),W.i[a.type].O&&W.g.bindBuffer(34963,W.i[a.type].O),W.g.vertexAttrib4fv(W.g.getAttribLocation(W.l,"col"),W.S(a.b)),W.i[a.type].O?W.g.drawElements(+a.mode||W.g[a.mode],W.i[a.type].indices.length,5123,0):W.g.drawArrays(+a.mode||W.g[a.mode],0,W.i[a.type].C.length/3))},s:(a,b)=>W.next[a]?.a?W.current[a][b]+W.next[a].f/W.next[a].a*(W.next[a][b]-W.current[a][b]):W.next[a][b],animation:(a,b=new DOMMatrix)=>W.next[a]?b.translateSelf(W.s(a,"x"),W.s(a,"y"),W.s(a,"z")).rotateSelf(W.s(a,"rx"),W.s(a,
"ry"),W.s(a,"rz")).scaleSelf(W.s(a,"w"),W.s(a,"h"),W.s(a,"d")):b,Y:(a,b=W.next.B)=>a?.o&&b?.o?(b.o.m41-a.o.m41)**2+(b.o.m42-a.o.m42)**2+(b.o.m43-a.o.m43)**2:0,ja:a=>W.ca=a,S:a=>[...a.replace("#","").match(5>a.length?/./g:/../g).map(b=>("0x"+b)/(5>a.length?15:255)),1],add:(a,b)=>{W.i[a]=b;b.G&&(W.i[a].da=1);W[a]=c=>W.u(c,a)},group:a=>W.u(a,"group"),move:(a,b)=>setTimeout(()=>{W.u(a)},b||1),delete:(a,b)=>setTimeout(()=>{delete W.next[a]},b||1),B:(a,b)=>setTimeout(()=>{W.u(a,a.n="camera")},b||1),fa:(a,
b)=>b?setTimeout(()=>{W.u(a,a.n="light")},b):W.u(a,a.n="light")};
W.smooth=(a,b={},c=[],d,g,k,m,l,f,e,A,B,C,w)=>{W.i[a.type].G=[];for(k=0;k<W.i[a.type].C.length;k+=3)c.push(W.i[a.type].C.slice(k,k+3));(d=W.i[a.type].indices)?g=1:(d=c,g=0);for(k=0;k<2*d.length;k+=3){m=k%d.length;l=c[A=g?W.i[a.type].indices[m]:m];f=c[B=g?W.i[a.type].indices[m+1]:m+1];e=c[C=g?W.i[a.type].indices[m+2]:m+2];let p=[f[0]-l[0],f[1]-l[1],f[2]-l[2]],q=[e[0]-f[0],e[1]-f[1],e[2]-f[2]];w=k>m?[0,0,0]:[p[1]*q[2]-p[2]*q[1],p[2]*q[0]-p[0]*q[2],p[0]*q[1]-p[1]*q[0]];let D,E;(D=b)[E=l[0]+"_"+l[1]+
"_"+l[2]]||(D[E]=[0,0,0]);let F,G;(F=b)[G=f[0]+"_"+f[1]+"_"+f[2]]||(F[G]=[0,0,0]);let H,I;(H=b)[I=e[0]+"_"+e[1]+"_"+e[2]]||(H[I]=[0,0,0]);W.i[a.type].G[A]=b[l[0]+"_"+l[1]+"_"+l[2]]=b[l[0]+"_"+l[1]+"_"+l[2]].map((u,v)=>u+w[v]);W.i[a.type].G[B]=b[f[0]+"_"+f[1]+"_"+f[2]]=b[f[0]+"_"+f[1]+"_"+f[2]].map((u,v)=>u+w[v]);W.i[a.type].G[C]=b[e[0]+"_"+e[1]+"_"+e[2]]=b[e[0]+"_"+e[1]+"_"+e[2]].map((u,v)=>u+w[v])}};
W.add("plane",{C:[.5,.5,0,-.5,.5,0,-.5,-.5,0,.5,.5,0,-.5,-.5,0,.5,-.5,0],L:[1,1,0,1,0,0,1,1,0,0,1,0]});W.add("billboard",W.i.ka);
W.add("cube",{C:[.5,.5,.5,-.5,.5,.5,-.5,-.5,.5,.5,.5,.5,-.5,-.5,.5,.5,-.5,.5,.5,.5,-.5,.5,.5,.5,.5,-.5,.5,.5,.5,-.5,.5,-.5,.5,.5,-.5,-.5,.5,.5,-.5,-.5,.5,-.5,-.5,.5,.5,.5,.5,-.5,-.5,.5,.5,.5,.5,.5,-.5,.5,.5,-.5,.5,-.5,-.5,-.5,-.5,-.5,.5,.5,-.5,-.5,-.5,-.5,-.5,.5,-.5,.5,-.5,.5,.5,-.5,.5,-.5,-.5,-.5,.5,-.5,.5,-.5,-.5,-.5,-.5,-.5,.5,-.5,.5,-.5,-.5,.5,-.5,-.5,-.5,.5,-.5,.5,-.5,-.5,-.5,.5,-.5,-.5],L:[1,1,0,1,0,0,1,1,0,0,1,0,1,1,0,1,0,0,1,1,0,0,1,0,1,1,0,1,0,0,1,1,0,0,1,0,1,1,0,1,0,0,1,1,0,0,1,0,1,1,0,
1,0,0,1,1,0,0,1,0,1,1,0,1,0,0,1,1,0,0,1,0]});W.X=a=>{W.u(a,"cube")};W.add("pyramid",{C:[-.5,-.5,.5,.5,-.5,.5,0,.5,0,.5,-.5,.5,.5,-.5,-.5,0,.5,0,.5,-.5,-.5,-.5,-.5,-.5,0,.5,0,-.5,-.5,-.5,-.5,-.5,.5,0,.5,0,.5,-.5,.5,-.5,-.5,.5,-.5,-.5,-.5,.5,-.5,.5,-.5,-.5,-.5,.5,-.5,-.5],L:[0,0,1,0,.5,1,0,0,1,0,.5,1,0,0,1,0,.5,1,0,0,1,0,.5,1,1,1,0,1,0,0,1,1,0,0,1,0]});
((a,b,c,d,g,k,m=[],l=[],f=[],e=20)=>{for(c=0;c<=e;c++)for(d=c*Math.PI/e,a=0;a<=e;a++)b=2*a*Math.PI/e,m.push(+(Math.sin(b)*Math.sin(d)/2).toFixed(6),+(Math.cos(d)/2).toFixed(6),+(Math.cos(b)*Math.sin(d)/2).toFixed(6)),f.push(3.5*Math.sin(a/e),-Math.sin(c/e)),a<e&&c<e&&l.push(g=c*(e+1)+a,k=g+(e+1),g+1,g+1,k,k+1);W.add("sphere",{C:m,L:f,indices:l})})();
function n(){var a=r;a.m.F=a.F;a.m.D=a.D;a.m.A=a.A;a.m.I=a.I;let b=navigator.getGamepads()[0],c=a.h.get("KeyA")||a.h.get("ArrowLeft")||b?.buttons[14].pressed?-1:0,d=a.h.get("KeyD")||a.h.get("ArrowRight")||b?.buttons[15].pressed?1:0,g=a.h.get("KeyW")||a.h.get("ArrowUp")||b?.buttons[12].pressed?-1:0,k=a.h.get("KeyS")||a.h.get("ArrowDown")||b?.buttons[13].pressed?1:0;a.j.x=c+d||b?.axes[0]||0;a.j.y=g+k||b?.axes[1]||0;.1>Math.hypot(a.j.x,a.j.y)&&(a.j.x=0,a.j.y=0);a.F=0>a.j.y;a.D=0<a.j.y;a.A=!!(a.h.get("Enter")||
b?.buttons[0].pressed||b?.buttons[9].pressed);a.I=!(!a.h.get("Escape")&&!b?.buttons[8].pressed)}class t{constructor(){this.I=this.A=this.D=this.F=!1;this.h=new Map;this.m={F:this.F,D:this.D,A:this.A,I:this.I};document.addEventListener("keydown",a=>{this.h.set(a.code,!0)});document.addEventListener("keyup",a=>{this.h.set(a.code,!1)});this.j=new DOMPoint}}let r=new t;class x{constructor(...a){this.h=new y;this.h.H?.(...a)}u(a,...b){this.h.T?.();this.h=a;this.h.H?.(...b)}}let z;var J=window.getComputedStyle(document.body);
let K=J.getPropertyValue("--color-0");J.getPropertyValue("--color-1");J.getPropertyValue("--color-2");J.getPropertyValue("--color-3");let L=J.getPropertyValue("--color-4");J.getPropertyValue("--color-5");class M{constructor(){let a=()=>{let b=Math.min(window.innerHeight,window.innerWidth);c2d.height=b;c2d.width=b};window.addEventListener("resize",a);a()}}new M;var N={title:"Great job",text:"Your test results are very promising."};
class O{constructor(){this.text=this.title=""}H(){resultTitle.innerText=this.title;resultText.innerText=this.text;result.classList.remove("hide")}K(){}}let P=new O;function Q(a){document.removeEventListener("submit",a.m);submit.classList.add("clicked");setTimeout(()=>{var b=z,c=b.u;P.title=N.title;P.text=N.text;c.call(b,P)},500)}
class R{constructor(){this.h=this.j=0;this.speed=-.5;this.counter=0;this.m=a=>{this.speed=2*(a?.target?.value-50)/100};this.J=()=>Q(this)}H(){controls.classList.add("slide");range.value="25";W.reset(c2d);W.clearColor(L);W.B({y:.5,z:5,rx:-7,M:10});document.body.style.background=L;W.group({n:"G1",ry:0});W.X({v:"G1",w:1.5,N:1,d:1,x:0,y:0,aa:1,b:K});W.group({n:"G2",ry:0});W.X({v:"G2",w:1.5,N:1,d:1,x:0,y:0,aa:1,b:K});range.addEventListener("input",this.m);submit.addEventListener("click",this.J)}T(){W.reset(c2d);
W.clearColor(L);document.removeEventListener("input",this.m);controls.classList.remove("slide")}K(){this.j++;360<this.j&&(this.j-=360);W.move({n:"G1",ry:this.j});this.h+=this.speed;360<this.h?this.h-=360:0>this.h&&(this.h+=360);W.move({n:"G2",ry:this.h});this.counter++;if(20<this.counter){this.counter=0;let a=Math.round(5*Math.pow((1-Math.abs(1-this.speed))*(1-Math.abs(this.j%180-this.h%180)/180),5));for(let b=0;5>b;b++)lights.children[b].classList.toggle("on",a>=b+1)}}}let S=new R;
class T{H(){z.u(S)}K(){}}let U=new T;class V{H(){intro.classList.remove("hide");play.addEventListener("click",this.h)}T(){intro.classList.add("hide");play.removeEventListener("click",this.h)}K(){r.A&&!r.m.A&&this.h()}h(){z.u(U)}}let aa=new V;
class y{constructor(){this.h=0;this.buttons=[this.j,this.m,this.J]}H(){menu.classList.remove("hide");start.addEventListener("click",this.j);contGame.addEventListener("click",this.m);fullscreen.addEventListener("click",this.J)}T(){menu.classList.add("hide");start.removeEventListener("click",this.j);contGame.removeEventListener("click",this.m);fullscreen.removeEventListener("click",this.J)}K(){r.F&&!r.m.F&&(this.h--,0>this.h&&(this.h=this.buttons.length-1));r.D&&!r.m.D&&(this.h++,this.h>=this.buttons.length&&
(this.h=0));if(r.A&&!r.m.A){let a=this.buttons[this.h];a&&a()}}j(){z.u(aa)}m(){}J(){document.fullscreenElement?document.exitFullscreen():document.documentElement.requestFullscreen()}}z=new x(...[]);let X=0,Y=1E3/60,Z=[];(function ba(a){let c=a-X;c>=Y&&(X=a-c%Y,n(),z.h.K(),Z.push(1E3/c),15===Z.length&&(fps.innerHTML=`${Math.round(Z.reduce((d,g)=>d+g)/15)} FPS`,Z=[]));requestAnimationFrame(ba)})(0);